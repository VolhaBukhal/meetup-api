{
  "openapi": "3.0.3",
  "info": {
    "title": "Swagger Meetups - OpenAPI 3.0",
    "description": "This is a sample Meetups api for main crud operations and the ability of sorting, filtering and searching of the meetups. ",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "o.bukhal@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "0.0.1"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"

    }
  },
  "host": "localhost:5000",
  "basePath": "/",
  "schemes": ["http"],
  "tags": [
    {
      "name": "Meetups",
      "description": "Everything about your meetings"
    }
  ],
  "paths": {
    "/meetups": {
      "get": {
        "tags": [
          "meetups"
        ],
        "operationId": "getAllMeetups",
        "summary": "Finds meetups by name, description or place of location (ex: title=html&place=victor&time=2022-09-14)",
        "description": "Sorting, filtering, searching are available",
        "parameters": [
          {
            "name": "sort_by",
            "in": "query",
            "description": "sorting in descending or ascending order",
            "example": "-title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "search by word example",
            "example": "sql",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "max number of meetups to return",
            "example": "5",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "title",
            "in": "query",
            "description": "Filter by title (title=html)",
            "example": "html",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "place",
            "in": "query",
            "description": "Filter by place (place=dresden)",
            "example": "dresden",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "time",
            "in": "query",
            "description": "Filter by time (time=2022-09-09)",
            "example": "2022-09-09",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Meetup"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "meetups"
        ],
        "security": [
          {
             "bearerAuth": []
          }
       ],
        "operationId": "createMeetup",
        "summary": "Create meetup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "title": "Code review",
                  "description": "need to get acquaintance",
                  "time": "2022-09-09T21:00:00.000Z",
                  "place": "Dresden Hall"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Meetup"
                }
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/meetups/{meetupId}": {
      "get": {
        "tags": [
          "meetups"
        ],
        "operationId": "getMeetUpById",
        "parameters": [
          {
            "name": "meetupId",
            "in": "path",
            "required": true,
            "description": "meetup identificator",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get single meetup by id",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Meetup"
                }
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "meetups"
        ],
        "operationId": "updateMeetup",
        "summary": "Update single meetup",
        "parameters": [
          {
            "name": "meetupId",
            "in": "path",
            "required": true,
            "description": "meetup identificator",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "title": "Code review update"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "no content"
          },
          "default": {
            "description": "Internal Server Error",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "meetups"
        ],
        "operationId": "deleteMeetup",
        "summary": "Delete single meetup",
        "parameters": [
          {
            "name": "meetupId",
            "in": "path",
            "required": true,
            "description": "meetup identificator",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Meetup with the id 7f224e92-8a82-4318-ad18-0b0f68f404a0 deleted from database"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Meetup with the id 7f224e92-8a82-4318-ad18-0b0f68f404a0 doesn't exist in database"
                }
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/registration": {
      "post": {
        "tags": [
          "User registration"
        ],
        "operationId": "registerUser",
        "summary": "User registration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "email": "admin@admin.com",
                  "password": "1111",
                  "roles": "ADMIN"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "created ",
            "content": {
              "application/json": {
                "schema": {
                  "example": "User: {user email} was registered successfully"
                }
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "User login"
        ],
        "operationId": "loginUser",
        "summary": "User login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "email": "hello@hello.com",
                  "password": "1111"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "created ",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjAzZGU2ODIxLWFiNGUtNDllNy05YjJjLWQ3NTk3MjdmNDFmNiIsInJvbGVzIjoiVVNFUiIsImlhdCI6MTY2MjUzNjYyNCwiZXhwIjoxNjYyNTM4NDI0fQ.6uNXwvFSZh7UfGRxTF7f--ue6wSlloXSz5yndgmwu-E",
                    "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjAzZGU2ODIxLWFiNGUtNDllNy05YjJjLWQ3NTk3MjdmNDFmNiIsInJvbGVzIjoiVVNFUiIsImlhdCI6MTY2MjUzNjYyNCwiZXhwIjoxNjYyNjIzMDI0fQ.UrByHnVMTcEVFOarDad8Xt5Fsf6bvnam62QjnBgynzI",
                    "user": {
                      "id": "03de6821-ab4e-49e7-9b2c-d759727f41f6",
                      "email": "admin@admin.com",
                      "role": "USER"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Tag": {
        "type": "string",
        "example": "backend, dbms",
        "xml": {
          "name": "tag"
        }
      },
      "Meetup": {
        "required": [
          "title",
          "description",
          "time",
          "place"
        ],
        "type": "object",
        "properties": {
          "id_meetup": {
            "type": "string",
            "example": "a197dd44-1537-4349-9f41-1c8d58dccbc1"
          },
          "title": {
            "type": "string",
            "example": "SQL discussion"
          },
          "description": {
            "type": "string",
            "example": "need to get acquaintance"
          },
          "time": {
            "type": "string",
            "format": "date",
            "example": "2022-09-09T21:00:00.000Z"
          },
          "place": {
            "type": "string",
            "example": "Victory Hall"
          },
          "tags": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "example": 500
          },
          "message": {
            "type": "string",
            "example": "error"
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "xml": {
          "name": "##default"
        }
      }
    }
  }
}
